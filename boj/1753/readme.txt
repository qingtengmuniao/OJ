1. 位操作----
对于每一位，用0/1表示black/white，其与1的异或操作 0^1=1， 1^1=0正好达到了翻转的目的。
扩展到棋盘，用16bit串（short）表示棋盘，那么全黑可以用0000 0000 0000 0000 （0x0或0）表示，可以将对于某个位置的一次翻转以及周边连带翻转操作，转化为这几个子的同时异或，那么把每个位置的1摆放上去就得到了操作码，对于左上角来说这个数是1100 1000 0000 0000（0xc800或51200）。有十六个位置于是可以得到16个操作码，于是对于一个位置的一次翻转就可以表示为上一次状态码和这十六个操作码对应位置的操作数的异或。
即。next = init(0x0)^operand(0xc800)   

2. 用getchar()读入的时候，利用文件重定向作为输入，cat haha | ./a.out一定要注意每行末尾是不是有空格。其次要注意读到\n要丢掉。

3. return !(now_status ^ 0x0000) || !(now_status ^ 0xffff); 
判断一个变量是否等于某个值，可以判断其与该值进行异或(0)的非是否为1。
